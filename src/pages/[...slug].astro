---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();
const allPosts = await getCollection('blog');
const sortedPosts = allPosts.sort((a, b) => b.data.pubDate.getTime() - a.data.pubDate.getTime());

// 按分类组织文章
const postsByCategory = sortedPosts.reduce((acc, p) => {
  const category = p.data.category || '其他';
  if (!acc[category]) {
    acc[category] = [];
  }
  acc[category].push(p);
  return acc;
}, {} as Record<string, typeof sortedPosts>);

// 获取当前文章的分类
const currentCategory = post.data.category || '其他';
---

<Layout title={post.data.title}>
  <div class="post-layout">
    <button class="mobile-menu-toggle" id="mobileMenuToggle">
      <svg width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
        <line x1="3" y1="6" x2="21" y2="6"></line>
        <line x1="3" y1="12" x2="21" y2="12"></line>
        <line x1="3" y1="18" x2="21" y2="18"></line>
      </svg>
    </button>
    
    <div class="sidebar-overlay" id="sidebarOverlay"></div>
    
    <aside class="sidebar" id="sidebar">
      <div class="sidebar-content">
        <h3>实操手册</h3>
        <div class="learning-path">
        <nav class="post-nav">
          {Object.entries(postsByCategory).map(([category, posts]) => (
            <div class="category-group">
              <div class={`category-header ${category === currentCategory ? 'expanded' : 'collapsed'}`} data-category={category}>
                <svg class="category-icon" width="12" height="12" viewBox="0 0 12 12" fill="none">
                  <path d="M4 2L8 6L4 10" stroke="currentColor" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                </svg>
                <span class="category-title">{category}</span>
                <span class="category-count">({posts.length})</span>
              </div>
              <div class={`category-posts ${category === currentCategory ? 'expanded' : 'collapsed'}`}>
                {posts.map(p => (
                  <a 
                    href={`/${p.slug}`} 
                    class={`nav-item ${p.slug === post.slug ? 'active' : ''}`}
                  >
                    <div class="nav-title">{p.data.title}</div>
                  </a>
                ))}
              </div>
              <div class="category-connector"></div>
            </div>
          ))}
        </nav>
        </div>
      </div>
    </aside>
    
    <article class="post">
      <div class="image-container">
        <img src={post.data.image} alt={post.data.title} />
      </div>
      <div class="content">
        <Content />
      </div>
    </article>
  </div>
</Layout>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const mobileMenuToggle = document.getElementById('mobileMenuToggle');
    const sidebar = document.getElementById('sidebar');
    const sidebarOverlay = document.getElementById('sidebarOverlay');
    const categoryHeaders = document.querySelectorAll('.category-header');

    function toggleSidebar() {
      sidebar?.classList.toggle('sidebar-open');
      sidebarOverlay?.classList.toggle('overlay-active');
      document.body.classList.toggle('sidebar-active');
    }

    function closeSidebar() {
      sidebar?.classList.remove('sidebar-open');
      sidebarOverlay?.classList.remove('overlay-active');
      document.body.classList.remove('sidebar-active');
    }

    function toggleCategory(categoryHeader) {
      const categoryPosts = categoryHeader.nextElementSibling;
      const isExpanded = categoryHeader.classList.contains('expanded');
      
      if (isExpanded) {
        categoryHeader.classList.remove('expanded');
        categoryHeader.classList.add('collapsed');
        categoryPosts.classList.remove('expanded');
        categoryPosts.classList.add('collapsed');
      } else {
        categoryHeader.classList.remove('collapsed');
        categoryHeader.classList.add('expanded');
        categoryPosts.classList.remove('collapsed');
        categoryPosts.classList.add('expanded');
      }
    }
    // 绑定事件
    mobileMenuToggle?.addEventListener('click', toggleSidebar);
    sidebarOverlay?.addEventListener('click', closeSidebar);

    // 分类点击事件
    categoryHeaders.forEach(header => {
      header.addEventListener('click', () => {
        toggleCategory(header);
      });
    });
    // 点击侧边栏内的链接时关闭侧边栏（移动端）
    const navItems = document.querySelectorAll('.nav-item');
    navItems.forEach(item => {
      item.addEventListener('click', () => {
        if (window.innerWidth <= 1024) {
          closeSidebar();
        }
      });
    });
  });
</script>

<style>
  .post-layout {
    display: flex;
    min-height: calc(100vh - 200px);
    position: relative;
  }

  .mobile-menu-toggle {
    display: none;
    position: fixed;
    top: 2rem;
    left: 2rem;
    z-index: 1001;
    background: rgba(255, 255, 255, 0.95);
    color: var(--text-primary);
    border: none;
    border-radius: 12px;
    padding: 12px;
    cursor: pointer;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
    backdrop-filter: blur(10px);
    transition: all 0.3s ease, opacity 0.3s ease;
    opacity: 1;
  }

  .mobile-menu-toggle:hover {
    background: rgba(255, 255, 255, 1);
    box-shadow: 0 6px 25px rgba(0, 0, 0, 0.15);
    transform: scale(1.05);
  }

  .sidebar.sidebar-open ~ * .mobile-menu-toggle,
  .sidebar-open .mobile-menu-toggle {
    opacity: 0;
    pointer-events: none;
  }
  .sidebar-overlay {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 999;
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
  }

  .sidebar-overlay.overlay-active {
    opacity: 1;
    pointer-events: auto;
  }

  .sidebar {
    width: 280px;
    background: linear-gradient(180deg, #fafafa 0%, #f5f5f5 100%);
    border-right: 2px solid #e8e8e8;
    position: sticky;
    top: 0;
    height: 100vh;
    overflow-y: auto;
    transition: transform 0.3s ease;
  }

  .sidebar-content {
    padding: 2rem 1.5rem;
  }

  .sidebar h3 {
    margin: 0 0 1.5rem 0;
    font-size: 1.2rem;
    color: var(--text-primary);
    font-weight: 700;
    text-align: center;
    padding-bottom: 1rem;
    border-bottom: 2px solid #e0e0e0;
  }

  .learning-path {
    position: relative;
  }

  .learning-path::before {
    content: '';
    position: absolute;
    left: 1rem;
    top: 0;
    bottom: 0;
    width: 1px;
    background: linear-gradient(180deg, 
      transparent 0%, 
      #c8c8c8 10%, 
      #a8a8a8 30%, 
      #888888 50%, 
      #a8a8a8 70%, 
      #c8c8c8 90%, 
      transparent 100%
    );
    z-index: 0;
  }
  .post-nav {
    display: flex;
    flex-direction: column;
    gap: 0;
    position: relative;
    z-index: 1;
  }

  .category-group {
    margin-bottom: 1.5rem;
    position: relative;
  }

  .category-group:last-child .category-connector {
    display: none;
  }

  .category-connector {
    position: absolute;
    left: 0.9rem;
    bottom: -1.5rem;
    width: 1px;
    height: 1.5rem;
    background: linear-gradient(180deg, #a8a8a8 0%, transparent 100%);
  }

  .category-header {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.75rem 1rem;
    background: transparent;
    border-radius: 0;
    cursor: pointer;
    transition: all 0.2s ease;
    user-select: none;
    position: relative;
    margin-left: 0.5rem;
  }

  .category-header::before {
    content: '';
    position: absolute;
    left: -0.5rem;
    top: 50%;
    transform: translateY(-50%);
    width: 6px;
    height: 6px;
    background: #d8d8d8;
    border-radius: 50%;
    border: 1px solid #f0f0f0;
    transition: all 0.3s ease;
    box-shadow: 0 0 0 2px rgba(255, 255, 255, 0.8);
  }

  .category-header:hover {
    background: rgba(0, 0, 0, 0.02);
    transform: translateX(2px);
  }

  .category-header:hover::before {
    background: #999999;
    transform: translateY(-50%) scale(1.1);
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 0.9);
  }

  .category-header.expanded {
    background: rgba(45, 45, 45, 0.05);
    color: var(--text-primary);
    font-weight: 600;
  }

  .category-header.expanded::before {
    background: #666666;
    transform: translateY(-50%) scale(1.2);
    box-shadow: 0 0 0 3px rgba(255, 255, 255, 1);
  }

  .category-icon {
    transition: transform 0.2s ease;
    flex-shrink: 0;
    opacity: 0.6;
  }

  .category-header.expanded .category-icon {
    transform: rotate(90deg);
    opacity: 1;
  }

  .category-title {
    font-weight: 500;
    font-size: 0.75rem;
    flex: 1;
    letter-spacing: 0.5px;
  }

  .category-count {
    font-size: 0.7rem;
    opacity: 0.6;
    background: rgba(0, 0, 0, 0.05);
    padding: 0.2rem 0.4rem;
    border-radius: 10px;
  }

  .category-posts {
    margin-top: 0.75rem;
    margin-left: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    overflow: hidden;
    transition: all 0.3s ease;
  }

  .category-posts.collapsed {
    max-height: 0;
    margin-top: 0;
    opacity: 0;
  }

  .category-posts.expanded {
    max-height: 1000px;
    opacity: 1;
  }

  .nav-item {
    display: block;
    padding: 0.4rem 0.75rem;
    border-radius: 0;
    text-decoration: none;
    color: var(--text-secondary);
    transition: all 0.2s ease;
    border-left: 2px solid transparent;
    position: relative;
  }

  .nav-item:hover {
    background: rgba(255, 255, 255, 0.8);
    border-left-color: #b8b8b8;
    transform: translateX(2px);
    color: var(--text-primary);
  }

  .nav-item.active {
    background: rgba(45, 45, 45, 0.06);
    color: var(--text-primary);
    border-left-color: #666666;
    font-weight: 500;
  }

  .nav-title {
    font-weight: 400;
    font-size: 0.8rem;
    line-height: 1.2;
  }

  .post {
    flex: 1;
    max-width: none;
    margin: 0;
    padding: 2rem;
  }

  .image-container {
    width: 100%;
    height: 400px;
    margin-bottom: 2rem;
    border-radius: 8px;
    overflow: hidden;
  }

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    filter: grayscale(30%);
    transition: filter 0.3s ease;
  }

  img:hover {
    filter: grayscale(10%);
  }

  .content {
    line-height: 1.6;
  }

  .content :global(h1) {
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    color: var(--text-primary);
  }

  .content :global(h2) {
    font-size: 1.8rem;
    margin: 2rem 0 1rem;
    color: var(--text-primary);
  }

  .content :global(p) {
    margin-bottom: 1.5rem;
    color: var(--text-secondary);
  }

  .content :global(ul) {
    margin-bottom: 1.5rem;
    padding-left: 1.5rem;
  }

  .content :global(li) {
    margin-bottom: 0.5rem;
    color: var(--text-secondary);
  }

  @media (max-width: 1024px) {
    .mobile-menu-toggle {
      display: block;
    }
    
    .sidebar {
      position: fixed;
      top: 0;
      left: 0;
      z-index: 1000;
      transform: translateX(-100%);
      height: 100vh;
      width: 280px;
      box-shadow: 2px 0 8px rgba(0, 0, 0, 0.15);
    }
    
    .sidebar.sidebar-open {
      transform: translateX(0);
    }

    .sidebar.sidebar-open + .post .mobile-menu-toggle {
      left: 2rem;
    }
    
    .sidebar-overlay {
      display: block;
    }
    
    .post {
      width: 100%;
      margin-left: 0;
    }
    
    body.sidebar-active {
      overflow: hidden;
    }
  }
</style>